spring.application.name=expressoh

#support reading from .env or .env.properties files
spring.config.import=optional:file:.env[.properties]

# 1. Create the database called customer_schema
# 2. Only then, can we run our application based on the following connection
spring.datasource.url=jdbc:mysql://localhost:3306/expressohdb?createDatabaseIfNotExist=true
# 3. Set up the user and password that accesses the database
spring.datasource.username=
spring.datasource.password=

# 4. Create tables and observe the tables created
# update - for any changes to our app model(s), the db tables will be updated
# create-drop - for any occasion when the app starts, drop and re-create the tables
# none - just use the database and its tables as they are
spring.jpa.hibernate.ddl-auto=update

# 4.1 Connect the app to the database
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL8Dialect

#set a different port to run the example:
server.port=8080

logging.level.org.springframework.security=DEBUG
logging.level.org.springframework.security.web.access=DEBUG
logging.level.org.springframework.security.authentication=DEBUG

#Set upload location and limit
file.upload-dir=uploads/images
spring.servlet.multipart.enabled=true
spring.servlet.multipart.max-file-size=5MB
spring.servlet.multipart.max-request-size=5MB